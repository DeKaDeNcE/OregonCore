name: OregonCore release build

on: [push]

# on:
#   schedule:
    # every day at 6am
#     - cron:  '0 6 * * *'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  REPO_DIR : ${{github.workspace}}
  BUILD_DIR: ${{github.workspace}}/bin/builddir

jobs:
  build:

    runs-on: windows-2019
    strategy:
      matrix:
       include:
          - OPTIONAL_DEFINES: "-DTOOLS=1 -DSERVERS=1 -DSCRIPTS=1 -DELUNA=0 -DWITH_DOCS=1 -DWITH_WARNINGS=0 -DWITH_COREDEBUG=0 -DUSE_EXTRACTORS=1"
            TYPE: "default"

          - OPTIONAL_DEFINES: "-DTOOLS=1 -DSERVERS=1 -DSCRIPTS=1 -DELUNA=1 -DWITH_WARNINGS=0 -DWITH_COREDEBUG=0 -DUSE_EXTRACTORS=1"
            TYPE: "with-eluna"


    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{env.REPO_DIR}}

      - uses:  actions/checkout@v2
      - name: Create Build Environment
        run: |
          #openssl
          choco install -y openssl   
          echo "GITHUB_SHORT_REV=$(git rev-parse --short HEAD)" >> $env:GITHUB_ENV
          echo "ARCHIVE_FILENAME=${{ github.event.repository.name }}-$(git rev-parse --short HEAD).zip" >> $env:GITHUB_ENV
          cmake -E make_directory ${{ env.BUILD_DIR }}
      - name: Configure
        run: cmake ${{matrix.OPTIONAL_DEFINES}} -B ${{env.BUILD_DIR}} -S ${{env.REPO_DIR}}

      - name: Build
        env:
          MAKEFLAGS: "-j8"
        run: cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}}

      - name: Archive files
        run: |
          #data is in Release folder
          cd ${{github.workspace}}/bin/builddir/bin
          copy c:/mysql/lib/libmysql.dll ${{github.workspace}}/bin/builddir/bin/Release/libmysql.dll
          copy "c:/Program Files/OpenSSL-Win64/bin/libssl-1_1-x64.dll" ${{github.workspace}}/bin/builddir/bin/Release/libssl-1_1-x64.dll
          copy "c:/Program Files/OpenSSL-Win64/bin/libcrypto-1_1-x64.dll" ${{github.workspace}}/bin/builddir/bin/Release/libcrypto-1_1-x64.dll

          7z a -tzip ${{env.ARCHIVE_FILENAME}} Release
      - name: Archive this artefact
        uses: actions/upload-artifact@v2
        with:
          name: snapshot-${{matrix.TYPE}}
          path: "${{github.workspace}}/bin/builddir/bin/${{env.ARCHIVE_FILENAME}}"

  upload:
    runs-on: windows-2019
    needs: build
    steps:
      - name: Download artifact snapshot-default
        uses: actions/download-artifact@v1
        with:
          name: snapshot-default
          path: default_snapshots
      - name: Download artifact snapshot-with-all
        uses: actions/download-artifact@v1
        with:
          name: snapshot-with-eluna
          path: all_snapshots


      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Upload snapshot
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build(${{ steps.date.outputs.date }})"
          files: all_snapshots
